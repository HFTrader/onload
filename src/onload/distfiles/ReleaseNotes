Onload-9.0.0
============

 These release notes are a work in progress and have no validity prior to
 forming part of an Onload release.

 This is a feature release of Onload with modernised internal interfaces
 between software components (control plane, TCPDirect and sfc net driver),
 adding new features and support for new operating systems and kernels since
 the earlier OpenOnload-8.1.x releases.

 An updated version 6.0.0.1000 of the sfc net driver is included for
 X2-based network cards.


Linux distribution support
--------------------------

 This package can be installed on:
 - Red Hat Enterprise Linux 8.6 - 8.10
 - Red Hat Enterprise Linux 9.2 - 9.4
 - Canonical Ubuntu Server LTS 22.04 and 24.04
 - Debian 12 "Bookworm"
 - Linux kernels 5.11 - 6.9


Sub-nanosecond timestamp resolution
-----------------------------------

Onload and ef_vi now internally process hardware timestamps with
sub-nanosecond resolution.

Timestamps retrieved via the Onload Extensions API now have the fractional
nanosecond part populated for hardware timestamps and an additional field
providing the associated timestamping flags. See extensions_timestamping.h
for details.

For ef_vi applications using timestamps:
 - ef_vi_receive_get_precise_timestamp() is the new preferred interface to
   obtain receive timestamps for all NICs. This populates an ef_precisetime
   object that includes a fractional nanosecond part and sync flags.
 - The sync flags associated with a transmit timestamp should continue to
   be accessed with the EF_EVENT_TX_TIMESTAMP_SYNC_FLAGS macro but it will
   no longer be possible to read the low order nanosecond bits to obtain the
   same flags as they now contain the full integral nanoseconds part.
 - The EF_EVENT_TX_WITH_TIMESTAMP_NSEC_FRAC16 macro provides access to the
   fractional nanosecond part of an event as a 16-bit quantity. For example,
   (uint16_t) 0x8000 represents half a nanosecond.

For X2 and X3 the resolution of the timestamp value is 1/4 ns but note that
the granularity of timestamping clock is hardware-dependent and
coarser than the timestamp resolution now available through the API.


Unsupported SN1000 functionality removed
----------------------------------------

Functionality for the unsupported SN1000 adapter and SN1000-specific
experimental onload extensions hlrx API defined in extensions_zc_hlrx.h have
been removed.


(c) Copyright 2024 Advanced Micro Devices, Inc.
